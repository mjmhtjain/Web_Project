<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Setting up RBAC on Red Hat AMQ Broker</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/g6C8S57LEwI/" /><category term="AMQ" scheme="searchisko:content:tags" /><category term="artemis" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="jboss a-mq" scheme="searchisko:content:tags" /><category term="messaging" scheme="searchisko:content:tags" /><category term="rbac" scheme="searchisko:content:tags" /><category term="Red Hat AMQ" scheme="searchisko:content:tags" /><category term="Role-based access control" scheme="searchisko:content:tags" /><category term="roles" scheme="searchisko:content:tags" /><category term="security" scheme="searchisko:content:tags" /><category term="separation of duties" scheme="searchisko:content:tags" /><author><name>Yohanes Widi Sono</name></author><id>searchisko:content:id:jbossorg_blog-setting_up_rbac_on_red_hat_amq_broker</id><updated>2018-08-06T13:30:14Z</updated><published>2018-08-06T13:30:14Z</published><content type="html">&lt;p&gt;One thing that is common in the enterprise world, especially in highly regulated industries, is to have separation of duties. Role-based access controls (RBAC) have built-in support for separation of duties. Roles determine what operations a user can and cannot perform. This post provides an example of how to configure proper RBAC on top of &lt;a href="https://developers.redhat.com/products/amq/overview/"&gt;Red Hat AMQ&lt;/a&gt;, a flexible, high-performance messaging platform based on the open source Apache ActiveMQ Artemis project.&lt;/p&gt; &lt;p&gt;In most of the cases, separation of duties on Red Hat AMQ can be divided into three primary roles:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Administrator role, which will have all permissions&lt;/li&gt; &lt;li&gt;Application role, which will have permission to publish, consume, or produce messages to a specific address, subscribe to topics or queues, or create and delete addresses.&lt;/li&gt; &lt;li&gt;Operation role, which will have read-only permission via the web console or supported protocols&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;To implement those roles, Red Hat AMQ has several security features that need be configured, as described in the following sections.&lt;/p&gt; &lt;p&gt;&lt;span id="more-511457"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;AMQ Broker authentication&lt;/h2&gt; &lt;p&gt;Out of the box, AMQ ships with the Java Authentication and Authorization Service (JAAS) security manager. It provides a default &lt;code&gt;PropertiesLogin&lt;/code&gt; JAAS login module that reads user, password, and roles information from properties files (&lt;code&gt;artemis-users.properties&lt;/code&gt; and &lt;code&gt;artemis-roles.properties&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;Thus, to add a user and role, we can use this &lt;code&gt;artemis&lt;/code&gt; command:&lt;/p&gt; &lt;p&gt;&lt;code&gt;// artemis user add --user &amp;#60;username&amp;#62; --password &amp;#60;password&amp;#62; --role &amp;#60;role_comma_seperated&amp;#62;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;For example, to add three users and their roles—one user with the Administrator role, one user with the Application role, and one user with the Operation role—we can use an &lt;code&gt;artemis&lt;/code&gt; command such as this:&lt;/p&gt; &lt;pre&gt;$ artemis user add --user amqadmin --password amqadmin --role amqadmin $ artemis user add --user amqapps --password amqapps --role amqapps $ artemis user add --user amqops --password amqops --role amqops&lt;/pre&gt; &lt;p&gt;On top of that, Red Hat AMQ also provides other authentication plugins. For more information, see the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.2/html/using_amq_broker/" rel="nofollow"&gt;official documentation&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;AMQ Broker authorization&lt;/h2&gt; &lt;p&gt;AMQ Broker authorization policies provide a flexible, role-based security model for applying security to queues based on their respective addresses. For instance, operations such as publishing, consuming, and producing a message to an address as well as creating and deleting an address are supported out of the box. In addition, the policies support protocols such as AMQP, OpenWire, MQTT, STOMP, HornetQ, and the native Artemis Core protocol. To clarify, authorization policies are not meant for setting the permission of the web console.&lt;/p&gt; &lt;p&gt;To configure permissions, we can edit the &lt;code&gt;broker.xml&lt;/code&gt; file in the &lt;code&gt;etc&lt;/code&gt; folder. By default, it has eight different permissions per address pattern. Thus, to implement the above roles, we can use permissions like this:&lt;/p&gt; &lt;pre&gt;&amp;#60;security-settings&amp;#62; &amp;#60;security-setting match="#"&amp;#62; &amp;#60;permission type="createNonDurableQueue" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="deleteNonDurableQueue" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="createDurableQueue" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="deleteDurableQueue" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="createAddress" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="deleteAddress" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="consume" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="browse" roles="amqadmin,amqapps,amqops"/&amp;#62; &amp;#60;permission type="send" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;!-- we need this; otherwise ./artemis data imp wouldn't work --&amp;#62; &amp;#60;permission type="manage" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;/security-setting&amp;#62; &amp;#60;/security-settings&amp;#62; &lt;/pre&gt; &lt;p&gt;Based on the example above, only users belonging to roles &lt;code&gt;amqadmin&lt;/code&gt;and &lt;code&gt;amqapps&lt;/code&gt; have permission to do operations (send/consume/browse/manage messages) to an AMQ address (queue/topic) as well as create and delete queues. In contrast, users belonging to the &lt;code&gt;amqops&lt;/code&gt; role have permission only to browse an address for monitoring purposes.&lt;/p&gt; &lt;h2&gt;AMQ web console authorization&lt;/h2&gt; &lt;p&gt;The web console in RedHat AMQ is based on &lt;a href="http://hawt.io/" rel="nofollow"&gt;Hawtio&lt;/a&gt;, which reads JMX operations using &lt;a href="https://jolokia.org/" rel="nofollow"&gt;Jolokia&lt;/a&gt;. Therefore, to configure the permissions for the web console, we need to set the JMX permission. Specifically, it can be set through the &lt;code&gt;management.xml&lt;/code&gt; file in the same folder as the &lt;code&gt;broker.xml&lt;/code&gt; file (the &lt;code&gt;etc&lt;/code&gt; folder). In short, to implement the primary roles described above, we can implement something like the following:&lt;/p&gt; &lt;pre&gt;&amp;#60;role-access&amp;#62; &amp;#60;match domain="org.apache.activemq.artemis" &amp;#62; &amp;#60;access method="list*" roles="amqops,amqadmin"/&amp;#62; &amp;#60;access method="get*" roles="amqops,amqadmin"/&amp;#62; &amp;#60;access method="is*" roles="amqops,amqadmin"/&amp;#62; &amp;#60;access method="set*" roles="amqadmin"/&amp;#62; &amp;#60;access method="browse*" roles="amqops,amqadmin"/&amp;#62; &amp;#60;access method="create*" roles="amqadmin"/&amp;#62; &amp;#60;access method="delete*" roles="amqadmin"/&amp;#62; &amp;#60;access method="send*" roles="amqadmin"/&amp;#62; &amp;#60;access method="*" roles="amqadmin"/&amp;#62; &amp;#60;/match&amp;#62; &amp;#60;/role-access&amp;#62; &lt;/pre&gt; &lt;p&gt;To sum up, only users belonging to &lt;code&gt;amqadmin&lt;/code&gt; have full permissions. However, &lt;code&gt;amqops&lt;/code&gt; users have read-only permission to monitor the broker using the web console. Similarly, the &lt;code&gt;amqapps&lt;/code&gt; role has no permission to use any JMX operation nor to log in through the web console.&lt;/p&gt; &lt;p&gt;Furthermore, the example above shows us that the method setting for a permission is actually a pattern for a JMX operation. It is important to realize that a role that is allowed to log in to the web console is read from the Java system property &lt;code&gt;hawtio.role&lt;/code&gt;. Hence, we need to configure the &lt;code&gt;etc/artemis.profile&lt;/code&gt; file as shown in the example below:&lt;/p&gt; &lt;pre&gt;JAVA_ARGS=" -XX:+PrintClassHistogram -XX:+UseG1GC -XX:+AggressiveOpts -XX:+UseFastAccessorMethods -Xms512M -Xmx2G -Dhawtio.realm=activemq -Dhawtio.offline="true" -Dhawtio.role="amqadmin,amqops" -Dhawtio.rolePrincipalClasses=org.apache.activemq.artemis.spi.core.security.jaas.RolePrincipal -Djolokia.policyLocation=${ARTEMIS_INSTANCE_ETC_URI}jolokia-access.xml -Djon.id=amq" &lt;/pre&gt; &lt;p&gt;In the example configuration above, the only thing that needed to be changed is &lt;code&gt;-Dhawtio.role="amqadmin,amqops"&lt;/code&gt;, which specifies the roles (comma-delimited) that are allowed to log in.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;By configuring the features described above, you can implement proper RBAC on top of Red Hat AMQ to improve security and enforce separation of duties. It is especially important to do this if you are in a highly regulated industry.&lt;/p&gt; &lt;p&gt;For more information on users and roles in Red Hat AMQ Broker, see the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.1/html/using_amq_broker/users"&gt;Users and Roles&lt;/a&gt; chapter of the &lt;em&gt;Using AMQ Broker&lt;/em&gt; guide.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;title=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" data-a2a-url="https://developers.redhat.com/blog/2018/08/06/setting-up-rbac-on-red-hat-amq-broker/" data-a2a-title="Setting up RBAC on Red Hat AMQ Broker"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/08/06/setting-up-rbac-on-red-hat-amq-broker/"&gt;Setting up RBAC on Red Hat AMQ Broker&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/g6C8S57LEwI" height="1" width="1" alt=""/&gt;</content><summary>One thing that is common in the enterprise world, especially in highly regulated industries, is to have separation of duties. Role-based access controls (RBAC) have built-in support for separation of duties. Roles determine what operations a user can and cannot perform. This post provides an example of how to configure proper RBAC on top of Red Hat AMQ, a flexible, high-performance messaging platf...</summary><dc:creator>Yohanes Widi Sono</dc:creator><dc:date>2018-08-06T13:30:14Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/08/06/setting-up-rbac-on-red-hat-amq-broker/</feedburner:origLink></entry><entry><title>Adventures in GraalVM: invoke Java code from JS in native-image</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/RqCIT9wfmng/Adventures-in-GraalVM-invoke-Java-code-from-JS-in-native-image.html" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_lburgazzoli" scheme="searchisko:content:tags" /><category term="GraalVM" scheme="searchisko:content:tags" /><category term="jboss-fuse" scheme="searchisko:content:tags" /><category term="scripting" scheme="searchisko:content:tags" /><author><name>Luca Burgazzoli</name></author><id>searchisko:content:id:jbossorg_blog-adventures_in_graalvm_invoke_java_code_from_js_in_native_image</id><updated>2018-08-06T00:00:00Z</updated><published>2018-08-06T00:00:00Z</published><content type="html">&lt;div class="paragraph"&gt; &lt;p&gt;Thre&amp;#8217;s a lot of interest about GraalVM&amp;#8217;s native-image recently so I give it a try but instead of "just" trying to compile some java code to a native binary I went to the edge trying to make the native binary extensible via JavaScript.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In a Java application make some java objects available to the JS runtime is trivial and you only need to do something like:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;try(Context context = Context.create()) { MyBean bean = new MyBean(); context.getBindings("js").putMember("bean", bean); context.eval("js", "bean.saySomething()") }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;But when a native binary is generated this does not work anymore as GraalVM as of RC5 does not yet support reflective access to Java code from JS (and other languages) so we need to use some proxy object GraalVM SDK provides.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The javadoc for the proxy packages is:&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;http://www.graalvm.org/sdk/javadoc/org/graalvm/polyglot/proxy/package-summary.html&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So let&amp;#8217;s write an example:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;try(Context ctx = Context.create()) { final Map&amp;#60;String, Object&amp;#62; proxy = new HashMap&amp;#60;&amp;#62;(); &lt;i class="conum" data-value="1"&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt; proxy.put("sayHello", new ProxyExecutable() { &lt;i class="conum" data-value="2"&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt; @Override public Object execute(Value... arguments) { if (arguments.length != 1) { throw new IllegalArgumentException(); } System.out.printf("Hello, %s\n", arguments[0].asString()); return null; } }); ProxyObject bean = ProxyObject.fromMap(proxy); &lt;i class="conum" data-value="3"&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt; ctx.getBindings("js").putMember("bean", bean); &lt;i class="conum" data-value="4"&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt; ctx.eval("js", "bean.sayHello('World!')"); &lt;i class="conum" data-value="5"&gt;&lt;/i&gt;&lt;b&gt;(5)&lt;/b&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="colist arabic"&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;i class="conum" data-value="1"&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt; &lt;td&gt;Use a map to describe our bean&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;i class="conum" data-value="2"&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt; &lt;td&gt;Wrap the function we want to invoke using a &lt;code&gt;&lt;code&gt;ProxyExecutable&lt;/code&gt;&lt;/code&gt; which mimics a guest language objects that are executable&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;i class="conum" data-value="3"&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt; &lt;td&gt;Wrap our map using &lt;code&gt;&lt;code&gt;ProxyObject&lt;/code&gt;&lt;/code&gt; builtin &lt;code&gt;&lt;code&gt;fromMap&lt;/code&gt;&lt;/code&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;i class="conum" data-value="4"&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt; &lt;td&gt;Bind our proxy to a variable named &lt;code&gt;&lt;code&gt;bean&lt;/code&gt;&lt;/code&gt; the scripting engine can the access&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;i class="conum" data-value="5"&gt;&lt;/i&gt;&lt;b&gt;5&lt;/b&gt;&lt;/td&gt; &lt;td&gt;Finally Invoke our &lt;code&gt;&lt;code&gt;ProxyExecutable&lt;/code&gt;&lt;/code&gt; from JS&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class="admonitionblock caution"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-caution" title="Caution"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;I&amp;#8217;m unable to have a stable base for going further because of the following issues:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/oracle/graal/issues/594" class="bare"&gt;https://github.com/oracle/graal/issues/594&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/oracle/graal/issues/592" class="bare"&gt;https://github.com/oracle/graal/issues/592&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/RqCIT9wfmng" height="1" width="1" alt=""/&gt;</content><summary>Thre’s a lot of interest about GraalVM’s native-image recently so I give it a try but instead of "just" trying to compile some java code to a native binary I went to the edge trying to make the native binary extensible via JavaScript. In a Java application make some java objects available to the JS runtime is trivial and you only need to do something like: try(Context context = Context.create()) {...</summary><dc:creator>Luca Burgazzoli</dc:creator><dc:date>2018-08-06T00:00:00Z</dc:date><feedburner:origLink>https://lburgazzoli.github.io/2018/08/06/Adventures-in-GraalVM-invoke-Java-code-from-JS-in-native-image.html</feedburner:origLink></entry><entry><title>Infinispan 9.4.0.Beta1 is out!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/TA0OEOkszLw/infinispan-users-we-have-just-released-9.html" /><category term="9.4" scheme="searchisko:content:tags" /><category term="beta release" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Pedro Ruivo</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_9_4_0_beta1_is_out</id><updated>2018-08-03T20:37:35Z</updated><published>2018-08-03T20:37:00Z</published><content type="html">&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;Infinispan users,&lt;br /&gt;&lt;br /&gt;We have just released 9.4.0.Beta1 which includes bug fixes and improvements. Highlights of this release include:&lt;/span&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;Removal of WebSocket server support (&lt;a href="https://issues.jboss.org/browse/ISPN-9386"&gt;ISPN-9386&lt;/a&gt;);&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;One step closer to remove compatibility mode, by dropping it from Remote Queries, Tasks and Scripts (&lt;a href="https://issues.jboss.org/browse/ISPN-9180"&gt;ISPN-9180&lt;/a&gt;, &lt;a href="https://issues.jboss.org/browse/ISPN-9182"&gt;ISPN-9182&lt;/a&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;Recovery Support for Hot Rod client transactions (&lt;a href="https://issues.jboss.org/browse/ISPN-9261"&gt;ISPN-9261&lt;/a&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;Fixed issue with Hot Rod client near cache for async operations (&lt;a href="https://issues.jboss.org/browse/ISPN-9393"&gt;ISPN-9393&lt;/a&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;Improvements in Ickle (&lt;a href="https://issues.jboss.org/browse/ISPN-9378"&gt;ISPN-9378&lt;/a&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;Additional Segmented Stores&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;RocksDB supports single database segmentation (&lt;a href="https://issues.jboss.org/browse/ISPN-9375"&gt;ISPN-9375&lt;/a&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;RemoteStore segmented for additional stream performance (&lt;a href="https://issues.jboss.org/browse/ISPN-9376"&gt;ISPN-9376&lt;/a&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;RocksDB now allows for properties to be provided to configure underlying database (&lt;a href="https://issues.jboss.org/browse/ISPN-9371"&gt;ISPN-9371&lt;/a&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;Component Upgrades:&lt;/span&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;Protostream upgraded to version 4.2.1.Final (&lt;a href="https://issues.jboss.org/browse/ISPN-9399"&gt;ISPN-9399&lt;/a&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;Hibernate ORM upgraded to version 5.3.4.Final (&lt;a href="https://issues.jboss.org/browse/ISPN-9406"&gt;ISPN-9406&lt;/a&gt;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;Other bug fixes.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;&lt;br /&gt;The full list of 9.4.0.Beta1 fixes are &lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12337825"&gt;here&lt;/a&gt;.&lt;/span&gt;&lt;br /&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;arial&amp;quot; , &amp;quot;helvetica&amp;quot; , sans-serif;"&gt;You can find both releases on our &lt;a href="https://infinispan.org/download/"&gt;download&lt;/a&gt; page. Please report any issues in our &lt;a href="https://issues.jboss.org/projects/ISPN"&gt;issue tracker&lt;/a&gt; and join the conversation in our &lt;a href="https://infinispan.zulipchat.com/"&gt;Zulip Chat&lt;/a&gt; to shape up our next release.&lt;br /&gt;&lt;br /&gt;Enjoy,&lt;br /&gt;The Infinispan Team&lt;/span&gt;&lt;br /&gt;&lt;div dir="ltr" style="line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/ItLGt1BYrsM" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/TA0OEOkszLw" height="1" width="1" alt=""/&gt;</content><summary>Infinispan users, We have just released 9.4.0.Beta1 which includes bug fixes and improvements. Highlights of this release include: Removal of WebSocket server support (ISPN-9386); One step closer to remove compatibility mode, by dropping it from Remote Queries, Tasks and Scripts (ISPN-9180, ISPN-9182) Recovery Support for Hot Rod client transactions (ISPN-9261) Fixed issue with Hot Rod client near...</summary><dc:creator>Pedro Ruivo</dc:creator><dc:date>2018-08-03T20:37:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/ItLGt1BYrsM/infinispan-users-we-have-just-released-9.html</feedburner:origLink></entry><entry><title>OKD: Renaming of OpenShift Origin with 3.10 release</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/tvf3_eH1Bso/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="OKD" scheme="searchisko:content:tags" /><category term="OpenShift Commons" scheme="searchisko:content:tags" /><category term="OpenShift Origin" scheme="searchisko:content:tags" /><author><name>Diane Mueller-Klingspor</name></author><id>searchisko:content:id:jbossorg_blog-okd_renaming_of_openshift_origin_with_3_10_release</id><updated>2018-08-03T20:21:17Z</updated><published>2018-08-03T20:21:17Z</published><content type="html">&lt;p&gt;[We are reposting on the Red Hat Developers blog this article from the Red Hat OpenShift blog, which was written by Diane Mueller.]&lt;/p&gt; &lt;p&gt;When we released OpenShift Origin as the open source upstream project for &lt;a href="http://openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt; back in April 2012, we had little inkling of the phenomenal trajectory of cloud-native technology that was to come. With all the work that has gone into the Kubernetes-based core platform (OpenShift 3) from the initial OpenShift Origin 1.0 Release (OpenShift 3) in June 2015, to the current release of &lt;a href="https://blog.openshift.com/red-hat-openshift-container-platform-3-10-is-now-available-for-download/"&gt;Red Hat OpenShift 3.10 release&lt;/a&gt; last week, we’ve seen the rise of Kubernetes and containers create the basis of the cloud-native landscape. We collaborated in the incubation and maturation of dozens of new cloud-native projects and into a myriad of upstream projects, expanding the universe of tools and platforms in a way we could only have dreamed about just three years ago.&lt;/p&gt; &lt;p&gt;So it’s time for a new logo, a new website, and a new name for our open source project. We are changing the name of our open source project to better represent who we are today, and who we’ll be tomorrow—the Origin community distribution of Kubernetes that powers Red Hat OpenShift.&lt;/p&gt; &lt;p&gt;&lt;span id="more-512207"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Project name change to OKD&lt;/h2&gt; &lt;p&gt;We’re continuing that effort by introducing a naming change to &amp;#8220;OKD&amp;#8221; to better represent our project as a distribution of Kubernetes, align our terminology with the larger cloud-native community naming conventions, and clarify how this upstream project functions within the Red Hat OpenShift product line.&lt;/p&gt; &lt;p&gt;OKD is here as of today (Aug. 3, 2018) as we release our next version (3.10). Beyond the great features in Kubernetes 1.10 and the user and customer focused stability, the most visible change in this release will be the introduction of the new name, &amp;#8220;OKD,&amp;#8221; and the re-launch of the community website as OKD.io. You’ll also see the new logo appear in the web console, on the documentation, and on our new website: &lt;a href="https://okd.io/"&gt;okd.io&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The new product release is known as OKD 3.10. The code base will still reside in the openshift/origin GitHub repository. We are not forsaking our origins. Your code commits, issues, and pull requests history and future will still be tracked in GitHub and your scripts and playbooks will still reference the same code base and repository structure. We are very much indebted to the 70+ organizations that have contributed to the project over the past five years and look forward to our continued collaboration with them and future contributors.&lt;/p&gt; &lt;p&gt;We’re excited about what these changes mean for our community—and while we know they might be confusing at first, we expect they will make everything easier in the long run. As always, OpenShift Commons will continue to be the hub for communicating with all of our community members during this transition in an effort to minimize confusion related to these changes.&lt;/p&gt; &lt;p&gt;Please take a moment to visit our new website, &lt;a href="https://okd.io/"&gt;okd.io&lt;/a&gt;, and download the latest release to check out the key upstream projects and our end users and to find the latest resource links.&lt;/p&gt; &lt;h2&gt;Join the community&lt;/h2&gt; &lt;p&gt;With &lt;a href="https://commons.openshift.org/#colleagues"&gt;400+ member organizations participating&lt;/a&gt;, OpenShift Commons is the place where the community goes to collaborate and work together on OpenShift. OpenShift Commons is open to all community participants: users, operators, enterprises, startups, non-profits, educational institutions, partners, and service providers.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://commons.openshift.org/#join"&gt;Join OpenShift Commons&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;View &lt;a href="https://commons.openshift.org/events.html"&gt;upcoming and recorded events and briefings&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;View a list of &lt;a href="https://commons.openshift.org/participants.html"&gt;OpenShift Commons participants&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Save the date&lt;/h2&gt; &lt;p&gt;We’re also excited to announce that the upcoming &lt;a href="https://commons.openshift.org/gatherings/Seattle_2018.html"&gt;OpenShift Commons Gathering&lt;/a&gt; will be taking place December 10, 2018, in Seattle, co-located once again with CNCF’s KubeCon + CloudNativeCon. The OpenShift Commons Gathering brings together experts from all over the world to discuss real-world implementations of container technologies, best practices for cloud-native application developers, and the upstream open source software projects that make up the OpenShift ecosystem.&lt;/p&gt; &lt;p&gt;Confirmed keynotes and speakers from Red Hat already include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;AMA Panel with OpenShift Product Managers and Engineering leads&lt;/li&gt; &lt;li&gt;Chris Wright on Emerging Technology and Innovation&lt;/li&gt; &lt;li&gt;Clayton Coleman &amp;#38; Mike Barrett on OpenShift 3.x: Features/Functions/Future&lt;/li&gt; &lt;li&gt;Diane Mueller on Cross-Community Collaboration with Upstream&lt;/li&gt; &lt;li&gt;Sebastian Pahl on Operator Framework&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;More speakers and panelists are being added; &lt;a href="https://commons.openshift.org/gatherings/Seattle_2018.html"&gt;check out the agenda for updates&lt;/a&gt;. Please note: Pre-registration is required.&lt;/p&gt; &lt;p&gt;To register, add the OpenShift Commons Gathering as a &lt;a href="https://events.linuxfoundation.org/events/kubecon-cloudnativecon-north-america-2018/co-located-events/openshiftcommonsgathering/"&gt;co-located event&lt;/a&gt; during your &lt;a href="https://www.regonline.com/registration/Checkin.aspx?EventID=2246960"&gt;KubeCon + CloudNativeCon registration.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F03%2Fokd-renaming-of-openshift-origin-with-3-10-release%2F&amp;#38;linkname=OKD%3A%20Renaming%20of%20OpenShift%20Origin%20with%203.10%20release" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F03%2Fokd-renaming-of-openshift-origin-with-3-10-release%2F&amp;#38;linkname=OKD%3A%20Renaming%20of%20OpenShift%20Origin%20with%203.10%20release" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F03%2Fokd-renaming-of-openshift-origin-with-3-10-release%2F&amp;#38;linkname=OKD%3A%20Renaming%20of%20OpenShift%20Origin%20with%203.10%20release" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F03%2Fokd-renaming-of-openshift-origin-with-3-10-release%2F&amp;#38;linkname=OKD%3A%20Renaming%20of%20OpenShift%20Origin%20with%203.10%20release" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F03%2Fokd-renaming-of-openshift-origin-with-3-10-release%2F&amp;#38;linkname=OKD%3A%20Renaming%20of%20OpenShift%20Origin%20with%203.10%20release" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F03%2Fokd-renaming-of-openshift-origin-with-3-10-release%2F&amp;#38;linkname=OKD%3A%20Renaming%20of%20OpenShift%20Origin%20with%203.10%20release" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F03%2Fokd-renaming-of-openshift-origin-with-3-10-release%2F&amp;#38;linkname=OKD%3A%20Renaming%20of%20OpenShift%20Origin%20with%203.10%20release" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F03%2Fokd-renaming-of-openshift-origin-with-3-10-release%2F&amp;#38;linkname=OKD%3A%20Renaming%20of%20OpenShift%20Origin%20with%203.10%20release" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F03%2Fokd-renaming-of-openshift-origin-with-3-10-release%2F&amp;#38;title=OKD%3A%20Renaming%20of%20OpenShift%20Origin%20with%203.10%20release" data-a2a-url="https://developers.redhat.com/blog/2018/08/03/okd-renaming-of-openshift-origin-with-3-10-release/" data-a2a-title="OKD: Renaming of OpenShift Origin with 3.10 release"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/08/03/okd-renaming-of-openshift-origin-with-3-10-release/"&gt;OKD: Renaming of OpenShift Origin with 3.10 release&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/tvf3_eH1Bso" height="1" width="1" alt=""/&gt;</content><summary>[We are reposting on the Red Hat Developers blog this article from the Red Hat OpenShift blog, which was written by Diane Mueller.] When we released OpenShift Origin as the open source upstream project for Red Hat OpenShift back in April 2012, we had little inkling of the phenomenal trajectory of cloud-native technology that was to come. With all the work that has gone into the Kubernetes-based co...</summary><dc:creator>Diane Mueller-Klingspor</dc:creator><dc:date>2018-08-03T20:21:17Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/08/03/okd-renaming-of-openshift-origin-with-3-10-release/</feedburner:origLink></entry><entry><title>From Agile to Serverless</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Fg91tmX6l2Q/from-agile-to-serverless-and-beyond.html" /><category term="agile" scheme="searchisko:content:tags" /><category term="Cloud Native" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-from_agile_to_serverless</id><updated>2018-08-03T13:05:02Z</updated><published>2018-08-03T12:48:00Z</published><content type="html">&lt;i&gt;If you prefer, read the same post on &lt;a href="https://medium.com/@bibryam/from-agile-to-serverless-33ff1be499ca" target="_blank"&gt;Medium&lt;/a&gt;.&amp;nbsp; &lt;/i&gt;&lt;br /&gt;&lt;h3&gt;Looking back. And forth.&lt;/h3&gt;The microservices architecture was born as a technological answer for the iterative Agile development methodology. At the early days of microservices, many companies were doing a form of Agile (XP, Scrum, Kanban, or a broken mixture of these) during development, but the existing software architectures didn't allow an incremental way of design and deployment. As a result, features were developed in fortnight iterations but deployed every six to twelve months iteration. Microservices came as a panacea in the right time, promising to address all these challenges. Architects and developers strangled the monoliths into tens of services which enabled them to touch and change different parts of the system without breaking the rest (in theory).&lt;br /&gt;&lt;br /&gt;Microservices on its own put light into the existing challenges of distributed systems and created new ones as well. Creating tens of new services didn't mean they are ready to deploy into production and use. The process of releasing and handing them over to Ops teams had to be improved. While some fell for the extreme of "You Build It, You Run It", others joined the DevOps movement. DevOps meant, better CI/CD pipelines, better interaction between Devs and Ops and everything it takes. But a practice without the enabling tools wasn't a leap, and burning large VMs per service didn't last for a very long. That led to containers with the Docker format which took over the IT industry overnight. Containers came as a technical solution to the pain of microservices architecture and DevOps practice. With containers, applications could be packaged and run in a format that the Devs and Ops would both understand and use. Even at the very early days, it was clear that managing tens or hundreds of containers will require automation, and Kubernetes came from the heavens and swept all the competition with a swing.&lt;br /&gt;&lt;br /&gt;Now, we do Agile development and use microservices architectures. We have one-click build and deployment pipelines with a unified application format. We practice DevOps and manage hundreds of microservices at scale, do blue-green and canary releases with Kubernetes. This was supposed to be the time of long-lasting technological peace where we can focus on the business problems and solve them. But it was not.&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-ncCxrQ5IO-Y/W2RM3mGIcZI/AAAAAAAALPY/7B7h4CAQVLQhieJiobaXe8NMuYzZOqsFwCLcBGAs/s1600/Screen%2BShot%2B2018-08-03%2Bat%2B15.38.22.png" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="732" data-original-width="1428" height="205" src="https://4.bp.blogspot.com/-ncCxrQ5IO-Y/W2RM3mGIcZI/AAAAAAAALPY/7B7h4CAQVLQhieJiobaXe8NMuYzZOqsFwCLcBGAs/s400/Screen%2BShot%2B2018-08-03%2Bat%2B15.38.22.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;From Agile to Serverless and Beyond&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;br /&gt;With Kubernetes, Devs can develop and Ops can deploy in a self-service manner. But there are still only one or two company-wide Kubernetes clusters that occasionally run out of resources. The cluster is now the center of the universe. And it is even more critical than the monolith was before as it runs the build server, and the git server, and the maven repository, the website, MongoDB, and a few other things. So a promise for a serverless platform came from the clouds. It came even before the containers reached into production. With serverless, every service would have its own cluster, a cluster where resources are limited only by the limit of the credit cards. It is a platform to which you tightly couple, and bet the existence of your company for the price of going faster. So it started all over again.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Fg91tmX6l2Q" height="1" width="1" alt=""/&gt;</content><summary>If you prefer, read the same post on Medium.  Looking back. And forth.The microservices architecture was born as a technological answer for the iterative Agile development methodology. At the early days of microservices, many companies were doing a form of Agile (XP, Scrum, Kanban, or a broken mixture of these) during development, but the existing software architectures didn't allow an incremental...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2018-08-03T12:48:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2018/08/from-agile-to-serverless-and-beyond.html</feedburner:origLink></entry><entry><title>Keycloak 4.2.1.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/fNVSEDBm4Pw/keycloak-421final-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Marek Posolda</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_4_2_1_final_released</id><updated>2018-08-03T06:29:14Z</updated><published>2018-08-03T06:29:00Z</published><content type="html">&lt;p&gt;This release just fixes some DB migration related bugs. &lt;p&gt;To download the release go to the &lt;a href="http://www.keycloak.org/downloads"&gt;Keycloak homepage&lt;/a&gt;. &lt;p&gt;For details on what is included in the release check out the &lt;a href="https://www.keycloak.org/docs/latest/release_notes/index.html"&gt;Release notes&lt;/a&gt; &lt;p&gt;The full list of resolved issues is available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%204.2.1.Final"&gt;JIRA&lt;/a&gt;. &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="http://www.keycloak.org/docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/fNVSEDBm4Pw" height="1" width="1" alt=""/&gt;</content><summary>This release just fixes some DB migration related bugs. To download the release go to the Keycloak homepage. For details on what is included in the release check out the Release notes The full list of resolved issues is available in JIRA. Before you upgrade remember to backup your database and check the upgrade guide for anything that may have changed.</summary><dc:creator>Marek Posolda</dc:creator><dc:date>2018-08-03T06:29:00Z</dc:date><feedburner:origLink>http://blog.keycloak.org/2018/08/keycloak-421final-released.html</feedburner:origLink></entry><entry><title>Container-native integration testing</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zJdfOWiCrUg/" /><category term="BDD" scheme="searchisko:content:tags" /><category term="behavior driven development" scheme="searchisko:content:tags" /><category term="ci/cd" scheme="searchisko:content:tags" /><category term="container-native" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration testing" scheme="searchisko:content:tags" /><category term="javascript" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="testing" scheme="searchisko:content:tags" /><author><name>Raffaele Spazzoli</name></author><id>searchisko:content:id:jbossorg_blog-container_native_integration_testing</id><updated>2018-08-02T18:08:25Z</updated><published>2018-08-02T18:08:25Z</published><content type="html">&lt;p&gt;Integration testing is still an important step in a CI/CD pipeline even when you are developing container-native applications. Integration tests tend to be very resource-intensive workloads that run for a limited time.&lt;/p&gt; &lt;p&gt;I wanted to explore how integration testing technologies and tools could leverage a container orchestrator (such as &lt;a href="http://openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt;) to run faster and more-dynamic tests, while at the same time using resources more effectively.&lt;/p&gt; &lt;p&gt;In this post, you will learn how to build &lt;a href="https://en.wikipedia.org/wiki/Behavior-driven_development"&gt;behavior-driven development&lt;/a&gt; (BDD) integration tests using &lt;a href="https://cucumber.io/"&gt;Cucumber&lt;/a&gt;, &lt;a href="https://www.protractortest.org/#/"&gt;Protractor&lt;/a&gt;, and &lt;a href="https://www.seleniumhq.org/"&gt;Selenium&lt;/a&gt; and how to run them in OpenShift using &lt;a href="https://opensource.zalando.com/zalenium/"&gt;Zalenium&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The code for the example of this article can be found on GitHub in &lt;a href="https://github.com/redhat-cop/container-pipelines/tree/master/cucumber-selenium-grid"&gt;redhat-cop/container-pipelinesh&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-511797"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;BDD testing&lt;/h2&gt; &lt;p&gt;I like to use BDD testing when developing integration tests.&lt;/p&gt; &lt;p&gt;The reason I like this approach is that it allows the Business Analysts (BAs), not the developers, to define the integration tests. With BDD, it is possible to create a development process where requirements and integration test definitions are ready at the same time and are created by the BA team.&lt;/p&gt; &lt;p&gt;This approach is much better than traditional approaches, such as the one shown in the diagram below, where integration tests are created by the Quality Assurance (QA) team after the development of the business capabilities is completed.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-511847 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-BDD-1024x265.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-BDD.png" alt="" width="1160" height="300" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-BDD.png 1160w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-BDD-300x78.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-BDD-768x199.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-BDD-1024x265.png 1024w" sizes="(max-width: 1160px) 100vw, 1160px" /&gt;&lt;/p&gt; &lt;p&gt;With BDD, the process looks more like the following:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-511837 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-BDD2.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-BDD2.png" alt="" width="720" height="420" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-BDD2.png 720w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-BDD2-300x175.png 300w" sizes="(max-width: 720px) 100vw, 720px" /&gt;&lt;/p&gt; &lt;p&gt;And each iteration typically takes a shorter time.&lt;/p&gt; &lt;p&gt;BAs can write integration tests definitions because in BDD, integration test cases are expressed in &lt;a href="https://docs.cucumber.io/gherkin/"&gt;Gherkin&lt;/a&gt;, which is a computer language that is very similar to natural language. The main keywords that Gerkin has are &lt;em&gt;Given&lt;/em&gt;, &lt;em&gt;When&lt;/em&gt;, and &lt;em&gt;Then&lt;/em&gt;, and every statement in Gherkin must start with one of them.&lt;/p&gt; &lt;p&gt;Here is an example:&lt;/p&gt; &lt;p&gt;&lt;em&gt;Given the user navigated to the login page&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;When the user enters username and password&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;When username and password are correct&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Then the system logs them in&lt;/em&gt;&lt;/p&gt; &lt;p&gt;A popular runtime that is able to interpret Gherkin tests is &lt;a href="https://cucumber.io/"&gt;Cucumber&lt;/a&gt;. When using Cucumber, a developer is required to implement some functions so that each Gherkin statement can be executed. Cucumber has bindings with many languages. It is recommended, but not mandatory, to write the tests in the same language as the application being tested.&lt;/p&gt; &lt;h2&gt;Test technology stack&lt;/h2&gt; &lt;p&gt;The application that we are going to test is the &lt;a href="http://todomvc.com/"&gt;TodoMVC&lt;/a&gt; web app in its &lt;a href="https://angularjs.org/"&gt;Angular&lt;/a&gt;JS &lt;a href="http://todomvc.com/examples/angularjs/#/"&gt;implementation&lt;/a&gt;. AngularJS is a very popular framework for writing &lt;a href="https://en.wikipedia.org/wiki/Single-page_application"&gt;single-page applications&lt;/a&gt; (SPAs).&lt;/p&gt; &lt;p&gt;Because AngularJS is in JavaScript, we are going to use &lt;a href="https://docs.cucumber.io/installation/javascript/"&gt;Cumcumber.js&lt;/a&gt;, the Cucumber binding for JavaScript.&lt;/p&gt; &lt;p&gt;To emulate the user interaction with the browser, we are going to use &lt;a href="https://www.seleniumhq.org/"&gt;Selenium&lt;/a&gt;. Selenium is a process that can spin up browsers and emulate user interaction based on commands it receives via an API.&lt;/p&gt; &lt;p&gt;Finally, we are going to use &lt;a href="https://www.protractortest.org/#/"&gt;Protractor&lt;/a&gt; to deal with some peculiarities of emulating an SPA that is written in AngularJS. Protractor takes care of waiting to ensure that the views inside the page are correctly loaded.&lt;/p&gt; &lt;p&gt;Overall, our test stack will look as follows:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-511827 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-Test-Stack-1024x354.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-Test-Stack.png" alt="" width="1247" height="431" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-Test-Stack.png 1247w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-Test-Stack-300x104.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-Test-Stack-768x265.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-Test-Stack-1024x354.png 1024w" sizes="(max-width: 1247px) 100vw, 1247px" /&gt;&lt;/p&gt; &lt;p&gt;The process that the diagram tries to describe is the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;When the Cucumber tests are started, Cucumber reads the test definitions from the Gherkin file.&lt;/li&gt; &lt;li&gt;Then it starts calling the test case implementation code.&lt;/li&gt; &lt;li&gt;The test case implementation code uses Protractor to perform actions on the web page.&lt;/li&gt; &lt;li&gt;When that happens, Protractor connects to the Selenium server and issues commands via the Selenium API.&lt;/li&gt; &lt;li&gt;Selenium executes these commands in a browser instance.&lt;/li&gt; &lt;li&gt;The browser connects to the web server(s) as needed. In our case, because we are using an SPA, the application is loaded as the first page load from the web server and then no more communication is needed.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Setting up this stack in a non-container based infrastructure is not simple, not only because of the number of processes and frameworks needed, but also because starting browsers in headless servers has been historically difficult. Fortunately for us, in a container-native world, we can easily automate all of this.&lt;/p&gt; &lt;h2&gt;Integration test farm&lt;/h2&gt; &lt;p&gt;Enterprises need to test their web applications with different combinations of browsers and operating systems. Usually, application owners will prioritize testing those combinations that are prevalent in the application user population. Normally, at least about half a dozen combinations are needed for each application.&lt;/p&gt; &lt;p&gt;Setting up different stacks and executing each of the test suite(s) sequentially on each stack is expensive in terms of resources and time.&lt;/p&gt; &lt;p&gt;Ideally, we would like to execute the tests in parallel.&lt;/p&gt; &lt;p&gt;To help solve this problem, we can use &lt;a href="https://www.seleniumhq.org/docs/07_selenium_grid.jsp"&gt;Selenium-Grid&lt;/a&gt;. Selenium-Grid is a solution comprising Selenium Hub, which is a request broker, and one or more nodes that can be used to execute requests.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-511817 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-Page-3.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-Page-3.png" alt="" width="806" height="597" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-Page-3.png 806w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-Page-3-300x222.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-Page-3-768x569.png 768w" sizes="(max-width: 806px) 100vw, 806px" /&gt;&lt;/p&gt; &lt;p&gt;Each Selenium node, which is usually running on different server, can be set up with different combinations of browsers and OSs (these and other characteristics are called &lt;em&gt;capabilities&lt;/em&gt; in Selenium). The Hub is smart enough to send requests that require certain capabilities to the node, which can meet them.&lt;/p&gt; &lt;p&gt;Installing and managing Selenium-Grid clusters is relatively complex—so much so, that an entire market was created to offer this service. Some of the main players of this market are &lt;a href="https://saucelabs.com/"&gt;SauceLabs&lt;/a&gt; and &lt;a href="https://www.browserstack.com/automate"&gt;BrowserStack&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Container-native integration tests&lt;/h2&gt; &lt;p&gt;Ideally, we would like to be able to create a Selenium-Grid cluster with nodes that offer the right capabilities for our tests and run the tests with a high degree of parallelism. Then, once the tests are done, we&amp;#8217;d destroy all of this infrastructure. This basically means re-creating on premises some of the services that are offered by integration test farm service providers.&lt;/p&gt; &lt;p&gt;I think the technology is still maturing in this space, and I found a very promising open source project that does some of what we need: &lt;a href="https://opensource.zalando.com/zalenium/"&gt;Zalenium&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Zalenium runs a modified Hub that is able to create nodes on demand and destroy them when they are not needed anymore. Currently, Zalenium supports only Chrome and Firefox on Linux. With the advent of &lt;a href="https://kubernetes.io/docs/getting-started-guides/windows/"&gt;Windows nodes&lt;/a&gt; for Kubernetes, it is conceivable to enhance it to support also Explorer and Edge on Windows.&lt;/p&gt; &lt;p&gt;If we put together all of our technology stack, it would look as follows:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-511857 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-zalenium-1024x453.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-zalenium.png" alt="" width="1079" height="477" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-zalenium.png 1079w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-zalenium-300x133.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-zalenium-768x340.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-zalenium-1024x453.png 1024w" sizes="(max-width: 1079px) 100vw, 1079px" /&gt;&lt;/p&gt; &lt;p&gt;Each of the ovals in this diagram is going to be a different pod in Kubernetes. The test player pods and the emulator pods are ephemeral and will be destroyed at the end of the test.&lt;/p&gt; &lt;h2&gt;Running the integration tests in a CI/CD pipeline&lt;/h2&gt; &lt;p&gt;I created a simple pipeline in Jenkins to shows how this type of integration test can be integrated with the rest of the release management process. The pipeline looks as follows:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-511867 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-pipeline-1024x100.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-pipeline.png" alt="" width="1212" height="118" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-pipeline.png 1212w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-pipeline-300x29.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-pipeline-768x75.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-pipeline-1024x100.png 1024w" sizes="(max-width: 1212px) 100vw, 1212px" /&gt;&lt;/p&gt; &lt;p&gt;Your pipelines may differ, but you should still be able to reuse the integration tests step without too much refactoring.&lt;/p&gt; &lt;p&gt;Because most of the pods are ephemeral, one important task of the pipeline is to collect the test results. Jenkins has its own way of doing that with the &lt;code&gt;archive&lt;/code&gt; and &lt;code&gt;publishHTML&lt;/code&gt; primitives.&lt;/p&gt; &lt;p&gt;This is the kind of report that you can expect from a test run (notice that the tests have been run for two browsers):&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-511807 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-reports-1024x487.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-reports.png" alt="" width="1905" height="906" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-reports.png 1905w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-reports-300x143.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-reports-768x365.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/ContainerNativeIntegrationTests-reports-1024x487.png 1024w" sizes="(max-width: 1905px) 100vw, 1905px" /&gt;&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, we have seen how complex it can be to set up an end-to-end integration test infrastructure and that the process can be simplified by using an infrastructure-as-code approach. We have also seen that running integration tests for multiple combinations of OSs and browsers can waste resources and time, and that a container orchestrator and ephemeral workloads can help mitigate that.&lt;/p&gt; &lt;p&gt;I think there is an opportunity for more-mature tools in the space of container native-integration testing. Yet it is possible today to run integration tests in a container platform and take advantage of a container-native approach.&lt;/p&gt; &lt;p&gt;When you are developing container-native applications, try using this container-native approach in your CI/CD pipeline to see if it can streamline your integration testing.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F02%2Fcontainer-native-integration-testing%2F&amp;#38;linkname=Container-native%20integration%20testing" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F02%2Fcontainer-native-integration-testing%2F&amp;#38;linkname=Container-native%20integration%20testing" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F02%2Fcontainer-native-integration-testing%2F&amp;#38;linkname=Container-native%20integration%20testing" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F02%2Fcontainer-native-integration-testing%2F&amp;#38;linkname=Container-native%20integration%20testing" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F02%2Fcontainer-native-integration-testing%2F&amp;#38;linkname=Container-native%20integration%20testing" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F02%2Fcontainer-native-integration-testing%2F&amp;#38;linkname=Container-native%20integration%20testing" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F02%2Fcontainer-native-integration-testing%2F&amp;#38;linkname=Container-native%20integration%20testing" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F02%2Fcontainer-native-integration-testing%2F&amp;#38;linkname=Container-native%20integration%20testing" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F02%2Fcontainer-native-integration-testing%2F&amp;#38;title=Container-native%20integration%20testing" data-a2a-url="https://developers.redhat.com/blog/2018/08/02/container-native-integration-testing/" data-a2a-title="Container-native integration testing"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/08/02/container-native-integration-testing/"&gt;Container-native integration testing&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zJdfOWiCrUg" height="1" width="1" alt=""/&gt;</content><summary>Integration testing is still an important step in a CI/CD pipeline even when you are developing container-native applications. Integration tests tend to be very resource-intensive workloads that run for a limited time. I wanted to explore how integration testing technologies and tools could leverage a container orchestrator (such as Red Hat OpenShift) to run faster and more-dynamic tests, while at...</summary><dc:creator>Raffaele Spazzoli</dc:creator><dc:date>2018-08-02T18:08:25Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/08/02/container-native-integration-testing/</feedburner:origLink></entry><entry><title>How Blockchain will Influence Open Source</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/XmdeR9bBz2k/tokenomics-for-open-source-how.html" /><category term="Blockchain" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="open source" scheme="searchisko:content:tags" /><category term="Smart Contracts" scheme="searchisko:content:tags" /><category term="Tokenomics" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-how_blockchain_will_influence_open_source</id><updated>2018-08-02T13:28:19Z</updated><published>2018-08-02T13:25:00Z</published><content type="html">&lt;span style="font-family: inherit;"&gt;&lt;i&gt;This post was originally published on &lt;a href="https://opensource.com/article/18/8/open-source-tokenomics" target="_blank"&gt;Opensource.com&lt;/a&gt; under &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/" target="_blank"&gt;CC BY-SA 4.0&lt;/a&gt;. &lt;/i&gt;&lt;/span&gt;&lt;i&gt;If you prefer, read the same post on &lt;a href="https://medium.com/@bibryam/how-blockchain-will-influence-open-source-9153e438f04" target="_blank"&gt;Medium&lt;/a&gt;. &lt;/i&gt;&lt;br /&gt;&lt;div class="panel-pane pane-entity-field pane-node-field-article-subhead"&gt;&lt;div class="field field-name-field-article-subhead field-type-text-long field-label-hidden"&gt;&lt;div class="field-items"&gt;&lt;h4&gt;Interactions between users and developers enabled by blockchain technology can create self-sustaining, decentralized open source.&lt;/h4&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;span style="font-family: inherit;"&gt;What Satoshi Nakamoto started as Bitcoin a decade ago has found a lot of followers and turned into a movement for decentralisation. For some, blockchain technology is a religion and will have the same impact on humanity as the Internet had. For others, it is another hype and a technology suitable for Ponzi schemes only. While blockchain is still evolving and trying to find its place, one thing is for sure: it is a disruptive technology that will fundamentally transform certain industries. And my bet is, open source will be one of them.&lt;/span&gt;&lt;br /&gt;&lt;h3&gt;&lt;span style="font-family: inherit;"&gt;The Open Source Model&lt;/span&gt;&lt;/h3&gt;&lt;span style="font-family: inherit;"&gt;Open source is a collaborative software development and distribution model that allows people with common interests to gather and produce something that no individual can create on their own. It allows the creation of value that is bigger than the sum of its parts. It is enabled by distributed collaboration tools (IRC, email, git, wiki, issue trackers, etc), distributed and protected by an open source licensing model and often governed by software foundations (such as Apache Software Foundation (ASF), Cloud Native Computing Foundation (CNCF), etc.).&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;One interesting aspect of the open source model is the lack of financial incentives in its core. There are some who believe open source work should remain detached from money and remain a free and voluntary activity driven by intrinsic motivators only (such as "common purpose" and "for the greater good”). And there are others who believe open source work should be rewarded directly or indirectly through extrinsic motivators (such as financial incentive). While the idea of open source projects prospering only through voluntary contributions is a very romantic one, in reality the majority of the open source contributions are done through paid development. Yes, we have a lot of voluntary contributions, but that is on a temporary basis from contributors that come and go, or for exceptionally popular projects while they are at their peak. Creating and sustaining open source projects that are useful for the enterprises, requires developing, documenting, testing, bug fixing for prolonged periods even when the software is no longer no longer shiny and exciting. It is a boring activity that can be best motivated through financial incentives.&lt;/span&gt;&lt;br /&gt;&lt;h3&gt;&lt;span style="font-family: inherit;"&gt;Commercial Open Source&lt;/span&gt;&lt;/h3&gt;&lt;span style="font-family: inherit;"&gt;Software foundations such as ASF accept and survive on donations and other income streams suchs as sponsorships, conference fees, etc. But those funds are primarily used to run the foundations, to ensure there is a legal protection for the projects, to ensure there are enough servers to run builds, issue trackers, mailing lists, etc.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;In a similar manner, CNCF has member fees (and similar other income streams as well) used to run the foundation and provide resources for the projects. Nowadays, most software is not build on laptops, it is run and tested on hundreds of machines on the cloud, and that requires money. Creating marketing campaigns, brand designs, distributing stickers, etc. all takes money and some foundations can assist with that as well. At its core, foundations implement the right processes for interacting with users, developers, and control mechanisms for distribution of the available financial resources to the open source projects for the common good.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;If users of the open source projects can donate money and the foundations can distribute it in a fair way, what is missing then? What is missing is a direct, transparent, trusted, decentralized, automated bidirectional link for transfer of value between the open source producers and the open source consumer. Currently, the link is either: &lt;/span&gt;&lt;span style="font-family: inherit;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;b&gt;Unidirectional&lt;/b&gt;: a developer (BTW, I'm saying a developer, but think of it as any role that is involved in the production, maintenance and distribution of software) can use their brain juice and devote time to do a contribution and share that value with all open source users. But there is no reverse link.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;b&gt;or Indirect&lt;/b&gt;: if there is a bug that affects a specific user/company, the options are:&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul style="margin-left: 40px;"&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;To have in-house developers to fix the bug and do a pull request. That is ideal, but not always possible to hire in-house developers knowledgeable about hundreds of open source projects used daily.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;To hire a freelancer specialising around that specific open source project and pay for the services. Ideally, the freelancer is also a committer for the open source project and can directly change the project code quickly. Otherwise, the fix might not make it to the project ever.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Or to approach a company providing services around the open source project. Such companies typically employ open source committers to influence and gain credibility in the community and offer products, expertise and professional services, etc.&lt;/span&gt;&lt;span style="font-family: inherit;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style="font-family: inherit;"&gt;And the last one has been a successful &lt;a href="https://medium.com/open-consensus/3-oss-business-model-progressions-dafd5837f2d"&gt;model&lt;/a&gt; for sustaining many open source projects. Whether that is through services (training, consulting, workshops), support, packaging, open core, SaaS, there are companies employing hundreds of staff to work on the open source for full time. There is a long&lt;a href="https://docs.google.com/spreadsheets/d/17nKMpi_Dh5slCqzLSFBoWMxNvWiwt2R-t4e_l7LPLhU/edit#gid=0"&gt; list&lt;/a&gt; of companies that have managed to build a successful open source business model over the years and the list is growing steadily.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;br /&gt;The companies backing open source projects have a very important role to play in the ecosystem. They are the catalyst between the open source projects and the users. The ones that add real value are not only packaging software nicely, but do much more. They can identify user needs, technology trends and create a full stack and even ecosystem of open source projects to address these needs. They can take a boring project and support it for years. If there is a missing piece in the stack, they can start an open source project from scratch and build a community around it. They can acquire a closed source software company and open source the projects. Here I got a little bit carried away, but yes, I'm talking about my employer&lt;a href="http://jobs.redhat.com/"&gt; Red Hat&lt;/a&gt; and what we do among other things.&lt;br /&gt;&lt;br /&gt;To summarise, with the commercial open source model, the projects are officially or unofficially managed and controlled by a very few individuals or companies that monetise them and also give back to the ecosystem by ensuring the project is successful. It is a win-win-win for the open source developers, managing companies and end users. The alternative is inactive projects and expensive closed source software.&lt;/span&gt;&lt;br /&gt;&lt;h3&gt;Self-sustaining, Decentralized Open Source&lt;/h3&gt;&lt;h3&gt;&lt;span style="font-family: inherit;"&gt;&lt;/span&gt;&lt;/h3&gt;&lt;span style="font-family: inherit;"&gt;In order for a project to become part of a reputable foundation it has to conform to certain criteria. For example, at ASF and CNCF there are incubation and graduation processes respectively where apart from all the technical and formal requirements, a project must have a healthy number of active committer and users. And that is in the essence of forming a sustainable open source project. Having source code on Github is not the same as having an active open source project. The latter requires committers that write the code, and users using the code, and both groups enforcing each other continuously by exchanging value and forming an ecosystem where everybody benefits. Some project ecosystems might be tiny and short lived, and some may consist of multiple projects and competing service providers, with very complex interactions lasting for many years. But as long as there is an exchange of value and everybody benefits from it, the project is developed, maintained and sustaining. &lt;br /&gt;&lt;br /&gt;If you loot at ASF &lt;a href="https://attic.apache.org/"&gt;Attic&lt;/a&gt;, you will find projects that have reached their end of life. Usually, that is the natural end of a project when it is not technologically fit for purpose any longer. Similarly in the ASF &lt;a href="http://incubator.apache.org/"&gt;Incubator&lt;/a&gt; you can find tens of projects that have never graduated but got retired instead. Typically, these are projects that are not able to build a large enough community because they are very specialized or there are better alternatives available. But there are also cases where projects with high potential and superior technology cannot sustain themselves because they cannot form or maintain a functioning ecosystem for exchange of value. The open source model and the foundations do not provide a framework and mechanisms assisting developers get paid for their work, or users get their requests heard. There isn’t a common value commitment framework for either party. As a result, some projects can only sustain themselves in the context of commercial open source where a company acts as an intermediary and value adder between developers and users. That puts another constraint and the necessity of a service provider company for sustaining some open source projects. Ideally, users should be able to express their interest in a project and developers should be able to show their commitment to the project in a transparent and measurable way and form a community with common interest and intent for exchange of value.&lt;br /&gt;&lt;br /&gt;Now, let's imagine there is a model, mechanisms and tools that enable direct interaction between the open source users and the developers. Not only code contributions through pull requests, questions over the mailing lists, GitHub stars, stickers on laptops, but also other ways to allow users influence projects destinies through a more richer, self-controlled and transparent means. That could include incentives for actions such as the following:&lt;/span&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Funding open source projects directly (rather than through software foundations)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Influence the direction of projects through voting (by token holders)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Feature requests driven by user needs&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;On-time pull request merges&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Bounties for bug hunts&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Better test coverage incentives&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Up-to-date documentation rewards&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Long-term support guarantees&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Timely security fixes&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Expert assistance, support and services&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Budget for evangelism and promotion of the projects&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Budget for regular boring activities&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Fast email and chat assistance&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Full visibility of the overall project findings, etc.&amp;nbsp; &lt;/span&gt;&lt;span style="font-family: inherit;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style="font-family: inherit;"&gt;If you haven't guessed already, I'm talking about using blockchain and &lt;a href="https://en.wikipedia.org/wiki/Smart_contract"&gt;smart contracts&lt;/a&gt; that will allow such interactions between users and developers. Smart contracts that will give power to the hand of token holders to influence projects.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;/span&gt;&lt;span style="font-family: inherit;"&gt; &lt;/span&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-RduLIMiEpnk/W2MADq0CBcI/AAAAAAAALPM/6i1vlZSmG04rC_-V9g6CBjMqU13RhT5TACLcBGAs/s1600/blockchain_in_open_source_ecosystem.png" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="1085" data-original-width="1600" height="270" src="https://4.bp.blogspot.com/-RduLIMiEpnk/W2MADq0CBcI/AAAAAAAALPM/6i1vlZSmG04rC_-V9g6CBjMqU13RhT5TACLcBGAs/s400/blockchain_in_open_source_ecosystem.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;&lt;span style="font-family: inherit;"&gt;The usage of blockchain in the open source ecosystem.&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;span style="font-family: inherit;"&gt;The existing channels in the open source ecosystem provide ways for users to influence projects through financial commitments to the service providers or other limited means through the foundations. But the addition of blockchain based technology to the open source ecosystem could open new channels for interaction between users and developers. I'm not saying this will replace the commercial open source model. Most companies working with open source do much more and cannot be replaced by smart contracts. But smart contracts can spark a new way for bootstrapping new open source projects. A new way to give a second life to commodity projects that are a burden to maintain. A new way to motivate developers to apply boring pull requests, write documentation, get tests to pass, etc. A direct value exchange channel between users and open source developers. It can add new channels to open source projects to grow and be self-sustaining in the long term even when a company backing is not feasible. A new complementary model for self-sustaining open source projects. A win-win.&lt;/span&gt;&lt;br /&gt;&lt;h3&gt;&lt;span style="font-family: inherit;"&gt;Tokenizing Open Source&lt;/span&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span style="font-family: inherit;"&gt;&lt;/span&gt;&lt;/h3&gt;&lt;span style="font-family: inherit;"&gt;There are already a number of initiatives aiming to tokenize open source. Some are focused only on an open source model, and some are generic but apply to open source development as well. Here is a list I built so far:&lt;/span&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://gitcoin.co/"&gt;Gitcoin&lt;/a&gt; - grow open source, one of the most promising ones in this area.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="http://oscoin.io/"&gt;Oscoin&lt;/a&gt; - cryptocurrency for open source&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://opencollective.com/opensource"&gt;Open Collective&lt;/a&gt; - platform for supporting open source projects.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://www.fundyourselfnow.com/page/about"&gt;Fund Yourself&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://kauri.io/"&gt;Kauri&lt;/a&gt; - support for open source project documentation.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://liberapay.com/"&gt;Liberapay&lt;/a&gt; - recurrent donations platform.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://fundrequest.io/"&gt;FundRequest&lt;/a&gt; - a decentralized marketplace for open source collaboration.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://canya.io/"&gt;CanYa&lt;/a&gt; - who recently acquired&lt;a href="https://www.bountysource.com/"&gt; Bountysource&lt;/a&gt; - the world’s largest open source P2P bounty platform.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://opengift.io/pub/"&gt;OpenGift&lt;/a&gt; - a new model for open source monetization.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://hacken.io/"&gt;Hacken&lt;/a&gt; - a white hat token for hackers.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://www.coinlancer.io/"&gt;Coinlancer&lt;/a&gt; - decentralized job market.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://codefund.io/"&gt;CodeFund&lt;/a&gt; - open source ad platform.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://issuehunt.io/"&gt;IssueHunt&lt;/a&gt; - funding platform for open source maintainers and contributors.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://blog.district0x.io/district-proposal-spotlight-1hive-283957f57967"&gt;District0x 1Hive&lt;/a&gt; - crowdfunding and curation platform.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;a href="https://github.com/district0x/district-proposals/issues/177"&gt;District0x Fixit&lt;/a&gt; - github bug bounties.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style="font-family: inherit;"&gt;The list above is varied and growing rapidly. Some of these projects will disappear, some will pivot, but a few will emerge as the SourceForge, the ASF, the Github of the future. Not necessarily replacing these platforms, but complementing them with token models and creating a richer open source ecosystem. So every project can pick its distribution model (license), governing model (foundation), and incentive model (token). In all cases, this will pump fresh blood to the open source world.&lt;/span&gt;&lt;br /&gt;&lt;h3&gt;&lt;span style="font-family: inherit;"&gt;The Future is Open and Decentralised&lt;/span&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Software is eating the world.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Every company is a software company.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Open source is where innovation happens.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-family: inherit;"&gt;Given this, i&lt;/span&gt;t is clear that open source is too big to fail, too important to be controlled by few or left to its own destiny. Open source is a shared-resource system that has value to all, and more more importantly it must be managed as such. It is only a matter of time until every company on earth will want to have a stake and a say in the open source world. Unfortunately, don't have the tools and the habits to do it yet. Such tools would allow anybody to show their appreciation or ignorance of software projects. It would create a direct and faster feedback loop between producers and consumers, between developers and users. It will foster innovation, innovation driven by user needs and expressed through token metrics.&lt;/span&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/XmdeR9bBz2k" height="1" width="1" alt=""/&gt;</content><summary>This post was originally published on Opensource.com under CC BY-SA 4.0. If you prefer, read the same post on Medium. Interactions between users and developers enabled by blockchain technology can create self-sustaining, decentralized open source.What Satoshi Nakamoto started as Bitcoin a decade ago has found a lot of followers and turned into a movement for decentralisation. For some, blockchain ...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2018-08-02T13:25:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2018/08/tokenomics-for-open-source-how.html</feedburner:origLink></entry><entry><title>Hibernate ORM 5.3.4.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-ozyxHtXuuk/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Guillaume Smet</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_orm_5_3_4_final_released</id><updated>2018-08-02T18:21:46Z</updated><published>2018-08-02T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We just released today a new maintenance release of Hibernate ORM 5.3.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What’s new&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="bug-fixes"&gt;&lt;a class="anchor" href="#bug-fixes"&gt;&lt;/a&gt;Bug fixes&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release mostly contains bugfixes:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12492"&gt;HHH-12492&lt;/a&gt; - JPA delete query generated has missing table alias and thus incorrect semantics&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12835"&gt;HHH-12835&lt;/a&gt; - Wrong assertion in BatchFetchQueueHelper&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12846"&gt;HHH-12846&lt;/a&gt; - Merge cascade of collection fails when orphan removal enabled with flush mode commit&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12847"&gt;HHH-12847&lt;/a&gt; - NullPointerException in FetchStyleLoadPlanBuildingAssociationVisitationStrategy::adjustJoinFetchIfNeeded&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12868"&gt;HHH-12868&lt;/a&gt; - Using CacheConcurrencyStrategy.NONE leads to a NPE when trying to load an entity&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH-12869"&gt;HHH-12869&lt;/a&gt; - SingletonEhcacheRegionFactory initialization fails&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The fix for HHH-12847 might have consequences on your applications if you are using lock options to load your entities: prior to the fix, the lock mode if set by lock options was ignored and thus not applied. Note that it only concerns you if you are using lock options, using lock modes directly was already working correctly.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="dependency-upgrade"&gt;&lt;a class="anchor" href="#dependency-upgrade"&gt;&lt;/a&gt;Dependency upgrade&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You should update your ByteBuddy dependency to 1.8.15 if you define it manually.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="security-manager-support-with-bytebuddy-as-bytecode-provider"&gt;&lt;a class="anchor" href="#security-manager-support-with-bytebuddy-as-bytecode-provider"&gt;&lt;/a&gt;Security manager support with ByteBuddy as bytecode provider&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Since ByteBuddy became our default bytecode provider, we did not support running with the security manager enabled. This is now possible.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="full-changelog"&gt;&lt;a class="anchor" href="#full-changelog"&gt;&lt;/a&gt;Full changelog&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find the full list of changes &lt;a href="https://hibernate.atlassian.net/projects/HHH/versions/31688/tab/release-report-all-issues"&gt;here&lt;/a&gt; (or, for people without a Hibernate Jira account, &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?version=31688&amp;amp;styleName=Html&amp;amp;projectId=10031"&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="getting-5-3-4-final"&gt;&lt;a class="anchor" href="#getting-5-3-4-final"&gt;&lt;/a&gt;Getting 5.3.4.Final&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All details are available and up to date on &lt;a href="http://hibernate.org/orm/releases/5.3/#get-it"&gt;the dedicated page on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the usual channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/tagged/hibernate"&gt;&lt;strong&gt;hibernate&lt;/strong&gt; tag on Stack Overflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-orm"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-ozyxHtXuuk" height="1" width="1" alt=""/&gt;</content><summary>We just released today a new maintenance release of Hibernate ORM 5.3. What’s new Bug fixes This release mostly contains bugfixes: HHH-12492 - JPA delete query generated has missing table alias and thus incorrect semantics HHH-12835 - Wrong assertion in BatchFetchQueueHelper HHH-12846 - Merge cascade of collection fails when orphan removal enabled with flush mode commit HHH-12847 - NullPointerExce...</summary><dc:creator>Guillaume Smet</dc:creator><dc:date>2018-08-02T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/08/02/hibernate-orm-534-final-out/</feedburner:origLink></entry><entry><title>Keycloak 4.2.0.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/YVIkofnLZIM/keycloak-420final-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Marek Posolda</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_4_2_0_final_released</id><updated>2018-08-01T13:44:41Z</updated><published>2018-08-01T13:44:00Z</published><content type="html">&lt;p&gt;To download the release go to the &lt;a href="http://www.keycloak.org/downloads"&gt;Keycloak homepage&lt;/a&gt;. &lt;p&gt;For details on what is included in the release check out the &lt;a href="https://www.keycloak.org/docs/latest/release_notes/index.html"&gt;Release notes&lt;/a&gt; &lt;p&gt;The full list of resolved issues is available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%204.2.0.Final"&gt;JIRA&lt;/a&gt;. &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="http://www.keycloak.org/docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/YVIkofnLZIM" height="1" width="1" alt=""/&gt;</content><summary>To download the release go to the Keycloak homepage. For details on what is included in the release check out the Release notes The full list of resolved issues is available in JIRA. Before you upgrade remember to backup your database and check the upgrade guide for anything that may have changed.</summary><dc:creator>Marek Posolda</dc:creator><dc:date>2018-08-01T13:44:00Z</dc:date><feedburner:origLink>http://blog.keycloak.org/2018/08/keycloak-420final-released.html</feedburner:origLink></entry></feed>
